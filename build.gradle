plugins {
   id 'java'
   id "org.xbib.gradle.plugin.jflex" version "1.5.0"
   id "org.xbib.gradle.plugin.git" version "2.0.0"
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
    jcenter()
}
sourceSets {
  main {
     jflex {
       srcDir "src/main/jflex"
     }
     java {
       srcDir "$buildDir/my-generated-sources/jflex"
     }
  }
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0' 
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {  
    ignoreFailures = true 
    useJUnitPlatform()
}

task reports() {
   description 'run Javadoc and test'
   dependsOn tasks.javadoc
   dependsOn tasks.test
}

task deployReports(dependsOn: 'updateGHPages' ) {
	description 'Deploys reports to the website'
	doLast {
		println("Reports Deployed")
	}
}

////////  Website publication on GitHub pages ///////////////////

task clonePages() {                                       
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = thisRepo
            bare = false
			refToCheckout = 'gh-pages'
        }
        grgit.checkout {
            branch = 'gh-pages'
        }
    }
}

task copyReports (dependsOn: ['reports', 'clonePages'])  { 
	copy {
	   from "$buildDir/docs"
	   into "$buildDir/gh-pages/docs"
	}
	copy {
	   from "$buildDir/reports"
	   into "$buildDir/gh-pages/reports"
	}
}

task updateGHPages (dependsOn: 'copyReports') { 
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        def grgit = git.open {
            dir = pagesDir + "/.git"
        }
        grgit.add (update: false, patterns: ['reports/'])
        grgit.add (update: true, patterns: ['reports/'])
		grgit.add (update: false, patterns: ['docs/'])
        grgit.add (update: true, patterns: ['docs/'])
        grgit.commit {
            message = "Updating web pages"
        }
        grgit.push {}
    }
}